class Vector2 {
    function __init__(x,y) {
        this.x = x
        this.y = y
    }
    function One() {
        return new Vector2(1.0,1.0)
    }

    function Zero() {
        return new Vector2(0.0,0.0)
    }

    function display() {
        concat("(",this.x,";",this.y,")")
    }
    function dot(val2) {
        return this.x * val2.x + this.y * val2.y
    }
    function +(rhs) {
        return new Vector2(this.x + rhs.x,this.y + rhs.y)
    }
    function -(rhs) {
        return new Vector2(this.x - rhs.x,this.y - rhs.y)
    }
    function /(rhs) {
        return new Vector2(this.x / rhs.x,this.y / rhs.y)
    }

    function *(rhs) {
        return new Vector2(this.x * rhs.x,this.y * rhs.y)
    }

    
    function _hash_() {
        var h = hash(this.x)
        h = h + hash(this.y)
        return h
    }

    function Length() {
        var ls = this.dot(this)
        return builtin_sqrt(ls)
    }
    function LengthSquared() {
        return this.dot(this)
    }

    function Normalize() {
        var length = this.length()
        return this / (new Vector2(length,length))
    }


    function Distance(value) {
        var diff = this - value
        var ls = diff.dot(diff)
        return builtin_sqrt(ls)
    }
    function DistanceSquared(value) {
        var diff = this - value
        diff.dot(diff)
    }

    function Reflect(normal) {
        var dot = this.dot(normal)
        return this - ((new Vector2(2,2)) * (new Vector2(dot,dot)) * normal)
    }

}